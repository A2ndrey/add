vanessaPlatforms = ["8.3.14.1630", "8.3.15.1489"]
ordinaryApps = ["0","1"]

pipeline {

    agent any
    
    options { 
      buildDiscarder(logRotator(numToKeepStr: '10'))
      disableConcurrentBuilds()
      timeout(time: 120, unit: 'MINUTES')
      timestamps() 
    }
    
    stages {

       stage("Matrix") {
            steps {
                script {
                    parallel getTasks()
                }
            }
        }    

    }

}

def getTasks() {
    def tasks = [:]
    for(int i=0; i< vanessaPlatforms.size(); i++) {
        def vanessaPlatformsValue = vanessaPlatforms[i]
        for(int j=0; j< compatibilityModes.size(); j++) {
            def compatibilityMode = compatibilityModes[j]
            tasks["${vanessaPlatformsValue}/${compatibilityMode}"] = {
                build job: "Vanessa-ADD-Docker-${vanessaPlatformsValue}",
                         parameters:    [[$class: 'StringParameterValue', name: 'V8VERSION', value: "${vanessaPlatformsValue}"],
                                        [$class: 'StringParameterValue', name:'ORDINARY_APP', value: "${compatibilityMode}"]]
            }
        }
    }
    tasks["failFast"]=false
    return tasks
}
   
    